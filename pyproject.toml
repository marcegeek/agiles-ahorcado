[tool.mypy]
exclude = [
    "features",
    "tests",
]
html_report = "reports/mypy"
xml_report = "reports/mypy"
junit_xml = "reports/mypy/mypy-junit.xml"
pretty = true
strict = true

[tool.coverage.run]
# Medir cobertura de ramas
branch = true
source = [
    # Incluir todo automÃ¡ticamente
    ".",
]

# Especifica archivos o directorios para excluir de la cobertura
omit = [
    "features/*",
    "tests/*",
    "venv/*",
    ".venv/*",
]

[tool.coverage.html]
directory = "reports/coverage"

[tool.coverage.xml]
output = "reports/coverage/coverage.xml"

[tool.flake8]
exclude = [".git", "venv", ".venv"]
per-file-ignores = [
    "features/steps/*:F811", # redefinition of step_impl functions
]
max-line-length = 115
max-complexity = 10
count = true
statistics = true
format = "html"
htmldir = "reports/flake8"

[tool.pytest.ini_options]
addopts = "--html=reports/tests/pytest.html --junit-xml=reports/tests/pytest.xml"

[tool.ruff]
line-length = 115

[tool.ruff.lint]
select = [
    "ALL",
    "D212", # multi-line docstring summary in first line
]

[tool.ruff.lint.per-file-ignores]
# ignores for tests, expanded from https://github.com/astral-sh/ruff/issues/4368
"tests/**/*.py" = [
    "S101", # asserts allowed in tests...
    "ARG", # Unused function args -> fixtures nevertheless are functionally relevant...
    "FBT", # Don't care about booleans as positional arguments in tests, e.g. via @pytest.mark.parametrize()
    "PLR2004", # Magic value used in comparison
    "S311", # Standard pseudo-random generators are not suitable for cryptographic purposes
    "ANN", # Don't check missing annotations
    "D", # Missing docstrings
]
# ignores for behave features
"features/**.py" = [
    "INP001", # implicit namespace package
    "S101",
    "PLR2004",
    "S311",
    "ANN",
    "D",
    "F811", # redefinition of step_impl functions
]

[tool.ruff.lint.pydocstyle]
convention = "pep257"
